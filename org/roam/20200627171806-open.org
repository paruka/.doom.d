#+TITLE: open
#+ROAM_TAGS: linux_io linux
* 描述
用于打开或创建一个文件。
* 声明
#+BEGIN_SRC C
#include <fcntl.h>

int open(const char *pathname, int oflag, ... /* mode_t mode */);
#+END_SRC
成功返回文件描述符，出错返回-1。
* oflags
** 访问方式标志
访问方式标志用于标识打开文件的访问模式，它们互斥，不能使用“或”运算符同时设置。
*** O_RDONLY
只读打开，其值为 =0= 。
*** O_WRONLY
只写打开，其值为 =1= 。
*** O_RDWR
读写打开，其值为 =2= 。
**  普通标志
*** O_APPEND
每次打开都追加到文件尾。
*** O_CREAT
若文件不存在，则创建它。使用此选项时，需指定第三个参数。
*** O_EXCL
若指定了 *O_CREAT* ，文件已存在时会出错，不存在时会创建。 *是一个原子操作* ，常用于判断文件是否存在。
*** O_TRUNC
若文件已打开，且以 *写* 权限打开，则将文件长度截取为0。
*** O_NOCTTY
当 *pathname* 为终端设备时，不将它分配为此进程的控制终端。
*** O_NONBLOCK
如果 *pathname* 是一个 *FIFO* 、 *块特殊文件* 或 *字符特殊文件* 时，将 *本次打开操作及后续IO操作* 设置为非阻塞。
* 注意
1. 函数返回的文件描述符一定是 *最小未用描述符* 。可利用此特性在标准输入、标准输出、标准出错上打开新文件。例如： *先关闭标准输出，在打开文件* 。
2. 整个路径名超过 *PATH_MAX* 或路径中的任一文件名超过 *NAME_MAX* 时返回错误，设 *errno* 为 *ENAMETOOLONG* 。
3. 某些系统在文件名超长时，会自动截断文件名。
4. 某些系统可用通过 *_POSIX_NO_TRUNC* 关闭文件名截断功能。
   

